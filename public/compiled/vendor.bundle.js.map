{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/actions/EnterPrivateSeedActions.js","app/alt.js","app/components/EnterPrivateSeed.jsx","app/stores/WalletStore.js","app/wallet.jsx"],"names":[],"mappings":"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","file":"vendor.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","alt = require('../alt.js');\n\nfunction EnterPrivateSeedActions() {\n  this.generateActions(\n    'coluInitSuccess',\n    'coluInitFail'\n  );\n}\n\nEnterPrivateSeedActions.prototype.coluInit = function(privateSeed) {\n    var settings = {\n            network: 'testnet',\n            privateSeed: privateSeed\n        },\n        that = this;\n\n    try {\n      colu = new Colu(settings);\n\n        colu.on('connect', function () {\n            if (!privateSeed) {\n              privateSeed = colu.hdwallet.getPrivateSeed();\n            } \n            //that.setState({\n            //    privateSeed: privateSeed\n            //});\n            \n            this.actions.coluInitSuccess(privateSeed);\n\n            $(\".wallet-content\").css(\"display\", \"block\");\n        });\n\n      colu.init();\n    } catch (e) {\n       this.actions.coluInitFail(e);\n       console.log(\"Enter a valid private seed\", e);\n    }\n}\n\nmodule.exports = alt.createActions(EnterPrivateSeedActions);","Alt = require('alt');\n\nmodule.exports = new Alt();","var WalletStore = require('../stores/WalletStore');\nvar EnterPrivateSeedActions = require('../actions/EnterPrivateSeedActions');\n\nvar EnterPrivateSeed = React.createClass({\n\tcomponentDidMount: function() {\n        WalletStore.listen(this.onChange);\n    },\n    onChange: function(state) {\n        this.setState(state);\n    },\n\thandleSubmit: function (e) {\n\t\tvar privateSeed = this.refs.privateSeed.value;\n\n\t\te.preventDefault();\n\t\tEnterPrivateSeedActions.coluInit();\n\t},\n\trender: function () {\n\t\treturn (\n\t\t    <form className=\"enter-privateseed-form\" onSubmit={this.handleSubmit}>\n\t\t        <div className = \"group\">\n\t\t        \t<input name=\"privateSeed\" ref=\"privateSeed\" />\n\t\t        \t<span className=\"bar\"></span>\n\t\t        \t<label>Private Seed</label>\n\t\t        \t<button className=\"btn\" type=\"submit\" ref=\"submitButton\">ENTER</button>\n\t\t        </div>\n\t\t    </form>\n\t\t);\n\t}\n});\n\nmodule.exports = EnterPrivateSeed;","alt = require('../alt.js');\nvar EnterPrivateSeedActions = require('../actions/EnterPrivateSeedActions.js');\n\n\nfunction WalletStore() {\n  this.bindActions(EnterPrivateSeedActions);\n  this.privateSeed = 0;\n}\n\nWalletStore.prototype.onColuInitSuccess = function(privateSeed) {\n  this.privateSeed = privateSeed;\n}\n\nWalletStore.prototype.onColuInitFail = function(e) {\n  this.privateSeed = e.toString();\n}\n\nmodule.exports = alt.createStore(WalletStore);","require('alt');\nvar colu;\nvar EnterPrivateSeed = require('./components/EnterPrivateSeed.jsx');\n\n\nvar SendAsset = React.createClass({\n\tsendAsset: function (assetInfo) {\n\t\tvar that = this,\n\t\t    asset = {\n\t\t    \tfrom: [assetInfo.from],\n\t\t    \tto: [{\n\t\t    \t\taddress: assetInfo.toAddress,\n                    assetId: assetInfo.assetId,\n\t\t    \t\tamount: assetInfo.amount\n\t\t    \t}]\n            };\n\t\tcolu.sendAsset(asset, function (err, body) {\n            if (err) return console.error(err)\n            \t//need to update the store \n        });\n\t},\n\thandleSubmit: function (e) {\n\t\tvar assetInfo = {\n\t\t\tfrom: this.refs.from.value,\n            toAddress: this.refs.toAddress.value,\n            assetId: this.refs.assetid.value,\n            amount: this.refs.amount.value\n        };\n\t\te.preventDefault();\n\t\tthis.sendAsset(assetInfo);\n\t},\n\trender: function () {\n\t\treturn (\n\t\t    <form className=\"sendto-form\" onSubmit={this.handleSubmit}>\n\t\t        <div className = \"group\">\n\t\t        \t<input ref=\"from\" />\n\t\t        \t<span className=\"bar\"></span>\n\t\t        \t<label>FROM</label>\n\t\t        </div>\n                <div className = \"group\">\n\t\t        \t<input ref=\"toAddress\" />\n\t\t        \t<span className=\"bar\"></span>\n\t\t        \t<label>TO ADDRESS</label>\n\t\t        </div>\n                <div className = \"group\">\n\t\t        \t<input ref=\"assetid\" />\n\t\t        \t<span className=\"bar\"></span>\n\t\t        \t<label>ASSET ID</label>\n\t\t        </div>\n                <div className = \"group\">\n\t\t        \t<input ref=\"amount\" />\n\t\t        \t<span className=\"bar\"></span>\n\t\t        \t<label>AMOUNT</label>\n\t\t        </div>\n\t\t        <button className=\"btn\" type=\"submit\" >SEND</button>\n\t\t    </form>\n\t\t);\n\t}\n});\n\nvar Wallet = React.createClass({\n\tgetInitialState: function () {\n\t\treturn {\n\t\t\tprivateSeed: null,\n\t\t\tassets: [],\n\t\t\terror: null,\n\t\t\tcurrentView: 0\n\t\t};\n\t},\n\tgetAssets: function () {\n\t\tvar that = this,\n\t\t    assets = [];\n\t\tcolu.getAssets(function (err, body) {\n            if (err) {\n            \treturn console.error(err);\n            }\n            assets = body;\n            assets.unshift({address:'ADDRESS', assetId: 'ASSET ID', amount: 'AMOUNT'});\n            that.setState({\n\t\t        assets: assets,\n\t\t        currentView: 1\n\t\t    });\n        });\n\t},\n\tissueAsset: function () {\n\t\tvar that = this,\n\t\t    asset = {\n                amount: 10,\n                divisibility: 0,\n                reissueable: false,\n                transfer: [{\n                    amount: 10\n                }],\n                metadata: {        \n                    'assetName': 'Mission Impossible 15',\n                    'issuer': 'Fox Theater',\n                    'description': 'Movie ticket to see the New Tom Cruise flick',\n                    'urls': [{name:'icon', url: 'https://pbs.twimg.com/profile_images/572390580823412736/uzfQSciL_bigger.png', mimeType: 'image/png', dataHash: ''}],\n                    'userData': {\n                        'meta' : [\n                            {key: 'Item ID', value: 2, type: 'Number'},\n                            {key: 'Item Name', value: 'Item Name', type: 'String'},\n                            {key: 'Company', value: 'My Company', type: 'String'},\n                            {key: 'Address', value: 'San Francisco, CA', type: 'String'}\n                        ]\n                    }\n                }\n            };\n\t\tcolu.issueAsset(asset, function (err, body) {\n            if (err) return console.error(err)\n            that.setState({\n\t\t\t    currentView: 2\n\t\t    });\n        });\n\t},\n\t\n\tdisplaySendAsset: function() {\n\t\tvar that = this;\n\t\tthat.setState({\n\t\t    currentView: 3\n\t\t});\n\t},\n\n\trender: function() {\n\t\tvar divStyle = {\n                display: 'none'\n            },\n            assetsGrid = this.state.assets.map(function(asset,i) {\n                return (\n                    <div key={'grid-row-' + i} className='row'>\n                        <div className='cell address-cell'>{asset.address}</div>\n                        <div className='cell assetid-cell'>{asset.assetId}</div>\n                        <div className='cell amount-cell'>{asset.amount}</div>\n                    </div>\n                );\n            }),\n            views = [{\n                name: 'empty',\n                loadView: ''\n            },{\n                name: 'viewAssets',\n                loadView: assetsGrid\n            },{\n                name: 'issueAsset',\n                loadView: 'Asset issued'\n            },{\n                name: 'sendAsset',\n                loadView: <SendAsset sendAsset={this.sendAsset}/>\n            }];\n\t    return (\n\t    \t<div id=\"\">\n\t            <div className=\"enter-private-seed\">\n\t\t\t\t    <EnterPrivateSeed />\n\t\t\t    </div>\n\t\t\t    <div className=\"wallet-content\" style={divStyle} >\n\t\t\t        <div className=\"private-seed\">PRIVATE SEED {this.state.privateSeed}</div>\n\t\t\t        <button className=\"btn nav-btn\" type=\"submit\" onClick={this.getAssets}>VIEW ASSETS</button>\n\t\t\t        <button className=\"btn nav-btn\" type=\"submit\" onClick={this.issueAsset}>ISSUE AN ASSET</button>\n\t\t\t        <button className=\"btn nav-btn\" type=\"submit\" onClick={this.displaySendAsset}>SEND AN ASSET</button>\n\t\t\t        <div className=\"view-content\">{views[this.state.currentView].loadView}</div>\n\t\t\t    </div>\n\t\t\t</div>\n\t    );\n\t}\n});\n\nReactDOM.render(<Wallet />, document.getElementById(\"display\"));"]}